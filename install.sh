#!/bin/bash

# AmneziaWG Docker Server - ะกะบัะธะฟั ะฑััััะพะน ัััะฐะฝะพะฒะบะธ
# ะะฒัะพะผะฐัะธัะตัะบะฐั ัััะฐะฝะพะฒะบะฐ ะธ ะฝะฐัััะพะนะบะฐ AmneziaWG ัะตัะฒะตัะฐ

set -e

# ะฆะฒะตัะฐ ะดะปั ะฒัะฒะพะดะฐ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ะคัะฝะบัะธะธ ะดะปั ะบัะฐัะธะฒะพะณะพ ะฒัะฒะพะดะฐ
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

title() {
    echo -e "\n${PURPLE}=== $1 ===${NC}\n"
}

# ะัะพะฒะตัะบะฐ ะฟัะฐะฒ root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "ะญัะพั ัะบัะธะฟั ะดะพะปะถะตะฝ ะฑััั ะทะฐะฟััะตะฝ ั ะฟัะฐะฒะฐะผะธ root (sudo)"
        exit 1
    fi
}

# ะัะพะฒะตัะบะฐ ะพะฟะตัะฐัะธะพะฝะฝะพะน ัะธััะตะผั
check_os() {
    title "ะัะพะฒะตัะบะฐ ะพะฟะตัะฐัะธะพะฝะฝะพะน ัะธััะตะผั"
    
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        OS=$NAME
        VER=$VERSION_ID
        log "ะะฑะฝะฐััะถะตะฝะฐ ะะก: $OS $VER"
    else
        error "ะะต ัะดะฐะปะพัั ะพะฟัะตะดะตะปะธัั ะพะฟะตัะฐัะธะพะฝะฝัั ัะธััะตะผั"
        exit 1
    fi
    
    # ะัะพะฒะตัะบะฐ ะฟะพะดะดะตัะถะธะฒะฐะตะผัั ะะก
    case $OS in
        "Ubuntu"|"Debian GNU/Linux")
            log "ะะก ะฟะพะดะดะตัะถะธะฒะฐะตััั"
            ;;
        *)
            warn "ะะก ะผะพะถะตั ะฝะต ะฟะพะดะดะตัะถะธะฒะฐัััั. ะัะพะดะพะปะถะฐะตะผ..."
            ;;
    esac
}

# ะะฑะฝะพะฒะปะตะฝะธะต ัะธััะตะผั
update_system() {
    title "ะะฑะฝะพะฒะปะตะฝะธะต ัะธััะตะผั"
    
    log "ะะฑะฝะพะฒะปัะตะผ ัะฟะธัะพะบ ะฟะฐะบะตัะพะฒ..."
    apt-get update -qq
    
    log "ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะฑะฐะทะพะฒัะต ะฟะฐะบะตัั..."
    apt-get install -y curl wget git software-properties-common apt-transport-https ca-certificates gnupg lsb-release
}

# ะฃััะฐะฝะพะฒะบะฐ Docker
install_docker() {
    title "ะฃััะฐะฝะพะฒะบะฐ Docker"
    
    if command -v docker &> /dev/null; then
        DOCKER_VERSION=$(docker --version | cut -d ' ' -f3 | cut -d ',' -f1)
        log "Docker ัะถะต ัััะฐะฝะพะฒะปะตะฝ: $DOCKER_VERSION"
        return 0
    fi
    
    log "ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ Docker..."
    
    # ะัะธัะธะฐะปัะฝัะน ัะฟะพัะพะฑ ัััะฐะฝะพะฒะบะธ Docker
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    apt-get update -qq
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # ะะปััะตัะฝะฐัะธะฒะฝะฐั ัััะฐะฝะพะฒะบะฐ docker-compose ะตัะปะธ ะฝะตั ะฟะปะฐะณะธะฝะฐ
    if ! command -v docker-compose &> /dev/null; then
        log "ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ docker-compose..."
        apt-get install -y docker-compose
    fi
    
    # ะะฐะฟััะบ Docker
    systemctl enable docker
    systemctl start docker
    
    success "Docker ัััะฐะฝะพะฒะปะตะฝ ััะฟะตัะฝะพ"
    docker --version
    docker-compose --version || docker compose version
}

# ะะฐัััะพะนะบะฐ DNS ะดะปั Docker
configure_docker_dns() {
    title "ะะฐัััะพะนะบะฐ Docker DNS"
    
    if [[ ! -f /etc/docker/daemon.json ]]; then
        log "ะกะพะทะดะฐะตะผ ะบะพะฝัะธะณััะฐัะธั Docker DNS..."
        mkdir -p /etc/docker
        cat > /etc/docker/daemon.json << EOF
{
    "dns": ["8.8.8.8", "8.8.4.4"]
}
EOF
        systemctl restart docker
        success "DNS ะดะปั Docker ะฝะฐัััะพะตะฝ"
    else
        log "Docker DNS ัะถะต ะฝะฐัััะพะตะฝ"
    fi
}

# ะะฐัััะพะนะบะฐ ัะฐะนัะฒะพะปะฐ
configure_firewall() {
    title "ะะฐัััะพะนะบะฐ ัะฐะนัะฒะพะปะฐ"
    
    # ะะพะปััะฐะตะผ ะฟะพัั ะธะท ะฟะตัะตะผะตะฝะฝัั ะธะปะธ ะธัะฟะพะปัะทัะตะผ ะฟะพ ัะผะพะปัะฐะฝะธั
    VPN_PORT=${AWG_PORT:-51820}
    
    if command -v ufw &> /dev/null; then
        log "ะะฐัััะฐะธะฒะฐะตะผ UFW ัะฐะนัะฒะพะป..."
        ufw --force enable
        ufw allow ssh
        ufw allow ${VPN_PORT}/udp
        ufw reload
        success "UFW ะฝะฐัััะพะตะฝ ะดะปั ะฟะพััะฐ ${VPN_PORT}/udp"
    elif command -v firewall-cmd &> /dev/null; then
        log "ะะฐัััะฐะธะฒะฐะตะผ firewalld..."
        firewall-cmd --permanent --add-port=${VPN_PORT}/udp
        firewall-cmd --reload
        success "Firewalld ะฝะฐัััะพะตะฝ ะดะปั ะฟะพััะฐ ${VPN_PORT}/udp"
    else
        warn "ะคะฐะนัะฒะพะป ะฝะต ะพะฑะฝะฐััะถะตะฝ. ะฃะฑะตะดะธัะตัั ััะพ ะฟะพัั ${VPN_PORT}/udp ะพัะบััั"
    fi
}

# ะะบะปััะตะฝะธะต IP forwarding
enable_ip_forwarding() {
    title "ะะบะปััะตะฝะธะต IP forwarding"
    
    if grep -q "net.ipv4.ip_forward=1" /etc/sysctl.conf; then
        log "IP forwarding ัะถะต ะฒะบะปััะตะฝ"
    else
        log "ะะบะปััะฐะตะผ IP forwarding..."
        echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
        sysctl -p
        success "IP forwarding ะฒะบะปััะตะฝ"
    fi
}

# ะกะพะทะดะฐะฝะธะต ะบะพะฝัะธะณััะฐัะธะธ
create_config() {
    title "ะกะพะทะดะฐะฝะธะต ะบะพะฝัะธะณััะฐัะธะธ"
    
    if [[ -f .env ]]; then
        log "ะคะฐะนะป .env ัะถะต ัััะตััะฒัะตั"
        return 0
    fi
    
    log "ะกะพะทะดะฐะตะผ ัะฐะนะป ะบะพะฝัะธะณััะฐัะธะธ .env..."
    
    # ะะฟัะตะดะตะปัะตะผ ะฟัะฑะปะธัะฝัะน IP
    PUBLIC_IP=$(curl -s ifconfig.me || curl -s icanhazip.com || curl -s ipecho.net/plain)
    
    if [[ -z "$PUBLIC_IP" ]]; then
        warn "ะะต ัะดะฐะปะพัั ะฐะฒัะพะผะฐัะธัะตัะบะธ ะพะฟัะตะดะตะปะธัั ะฟัะฑะปะธัะฝัะน IP"
        read -p "ะะฒะตะดะธัะต ะฟัะฑะปะธัะฝัะน IP ะฐะดัะตั ัะตัะฒะตัะฐ: " PUBLIC_IP
    else
        log "ะะฑะฝะฐััะถะตะฝ ะฟัะฑะปะธัะฝัะน IP: $PUBLIC_IP"
    fi
    
    # ะะพะฟะธััะตะผ ะฟัะธะผะตั ะบะพะฝัะธะณััะฐัะธะธ
    cp env.example .env
    
    # ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะฟัะฑะปะธัะฝัะน IP ะตัะปะธ ะพะฝ ะพะฟัะตะดะตะปะตะฝ
    if [[ -n "$PUBLIC_IP" ]]; then
        echo "SERVER_PUBLIC_IP=$PUBLIC_IP" >> .env
    fi
    
    success "ะะพะฝัะธะณััะฐัะธั ัะพะทะดะฐะฝะฐ ะฒ ัะฐะนะปะต .env"
    warn "ะัะพะฒะตัััะต ะธ ะพััะตะดะฐะบัะธััะนัะต ะฝะฐัััะพะนะบะธ ะฒ ัะฐะนะปะต .env ะฟัะธ ะฝะตะพะฑัะพะดะธะผะพััะธ"
}

# ะกะฑะพัะบะฐ ะธ ะทะฐะฟััะบ
build_and_start() {
    title "ะกะฑะพัะบะฐ ะธ ะทะฐะฟััะบ AmneziaWG"
    
    log "ะะฑะฝะพะฒะปัะตะผ ัะฐะฑะผะพะดัะปะธ..."
    git submodule update --init --recursive
    
    log "ะกะพะฑะธัะฐะตะผ Docker ะพะฑัะฐะท..."
    make build
    
    log "ะะฐะฟััะบะฐะตะผ ัะตัะฒะตั..."
    make up
    
    sleep 10
    
    log "ะัะพะฒะตััะตะผ ััะฐััั..."
    make status
}

# ะะพะบะฐะท ะธะฝัะพัะผะฐัะธะธ ะดะปั ะฟะพะดะบะปััะตะฝะธั
show_connection_info() {
    title "ะะฝัะพัะผะฐัะธั ะดะปั ะฟะพะดะบะปััะตะฝะธั"
    
    echo -e "${CYAN}๐ฑ ะะปั ะฟะพะดะบะปััะตะฝะธั ะผะพะฑะธะปัะฝัั ััััะพะนััะฒ:${NC}"
    echo "1. ะฃััะฐะฝะพะฒะธัะต ะฟัะธะปะพะถะตะฝะธะต AmneziaVPN"
    echo "2. ะะพะปััะธัะต QR ะบะพะด ะบะพะผะฐะฝะดะพะน: make client-qr name=client1"
    echo "3. ะััะบะฐะฝะธััะนัะต QR ะบะพะด ะฒ ะฟัะธะปะพะถะตะฝะธะธ"
    echo ""
    
    echo -e "${CYAN}๐ฅ๏ธ  ะะปั ะฟะพะดะบะปััะตะฝะธั ะบะพะผะฟัััะตัะฐ:${NC}"
    echo "1. ะกะบะฐัะฐะนัะต ะบะพะฝัะธะณััะฐัะธั: make client-config name=client1"
    echo "2. ะัะฟะพะปัะทัะนัะต ั ัะพะฒะผะตััะธะผัะผ AmneziaWG ะบะปะธะตะฝัะพะผ"
    echo ""
    
    echo -e "${CYAN}โ๏ธ  ะฃะฟัะฐะฒะปะตะฝะธะต:${NC}"
    echo "โข ะกัะฐััั ัะตัะฒะตัะฐ: make status"
    echo "โข ะะพะณะธ: make logs"
    echo "โข ะะพะฑะฐะฒะธัั ะบะปะธะตะฝัะฐ: make client-add name=newclient ip=10.13.13.5"
    echo "โข ะกะฟะธัะพะบ ะบะพะผะฐะฝะด: make help"
    echo ""
    
    echo -e "${CYAN}๐ฅ ะะพัั ะดะปั ัะฐะนัะฒะพะปะฐ: ${AWG_PORT:-51820}/udp${NC}"
}

# ะัะฝะพะฒะฝะฐั ััะฝะบัะธั
main() {
    echo -e "${PURPLE}"
    echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
    echo "โ                    AmneziaWG Docker Server                   โ"
    echo "โ                     ะะฒัะพะผะฐัะธัะตัะบะฐั ัััะฐะฝะพะฒะบะฐ                 โ"
    echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
    echo -e "${NC}\n"
    
    check_root
    check_os
    update_system
    install_docker
    configure_docker_dns
    enable_ip_forwarding
    create_config
    configure_firewall
    build_and_start
    show_connection_info
    
    echo ""
    success "๐ ะฃััะฐะฝะพะฒะบะฐ ะทะฐะฒะตััะตะฝะฐ ััะฟะตัะฝะพ!"
    echo -e "${GREEN}AmneziaWG ัะตัะฒะตั ะทะฐะฟััะตะฝ ะธ ะณะพัะพะฒ ะบ ะฟะพะดะบะปััะตะฝะธัะผ${NC}"
    echo ""
    echo -e "${YELLOW}๐ก ะะตัะฒัะน ะบะปะธะตะฝั ัะถะต ัะพะทะดะฐะฝ. ะะพะปััะธัะต QR ะบะพะด:${NC}"
    echo -e "${CYAN}make client-qr name=client1${NC}"
    echo ""
}

# ะะฑัะฐะฑะพัะบะฐ ะพะฟัะธะน ะบะพะผะฐะฝะดะฝะพะน ัััะพะบะธ
case "${1:-}" in
    --help|-h)
        echo "ะัะฟะพะปัะทะพะฒะฐะฝะธะต: $0 [ะพะฟัะธะธ]"
        echo "ะะฟัะธะธ:"
        echo "  --help, -h     ะะพะบะฐะทะฐัั ััั ัะฟัะฐะฒะบั"
        echo "  --no-firewall  ะัะพะฟัััะธัั ะฝะฐัััะพะนะบั ัะฐะนัะฒะพะปะฐ"
        echo "  --port PORT    ะัะฟะพะปัะทะพะฒะฐัั ัะบะฐะทะฐะฝะฝัะน ะฟะพัั (ะฟะพ ัะผะพะปัะฐะฝะธั 51820)"
        exit 0
        ;;
    --no-firewall)
        CONFIGURE_FIREWALL=false
        ;;
    --port)
        if [[ -n "${2:-}" ]]; then
            AWG_PORT="$2"
            shift
        else
            error "ะะต ัะบะฐะทะฐะฝ ะฟะพัั ะดะปั ะพะฟัะธะธ --port"
            exit 1
        fi
        ;;
esac

# ะะฐะฟััะบ ะพัะฝะพะฒะฝะพะน ััะฝะบัะธะธ
main "$@"

